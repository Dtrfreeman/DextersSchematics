#!/usr/bin/layout
#name=callback rtl2gds
#help=callback macro called after completing the place & route



string temp;
string workDir;

int main(){
  if (process::trigger()=="output") {
     layout->showProgress("RTL to GDS running");
     cout(process::toolData());
     return 0;
     }
  layout->showStatus("RTL to GDS loading result");
  file f;
  temp=f.tempPath()+"/";
  workDir=process::getEnv("WORK_ROOT");
  string s=process::toolResult();
  if (s.size()>3){
    textEdit *te=project::getCentralTextEditor();
    if (te->filename!="") te->newDoc();
    if (te->drawing->title!="") te->newDoc();
    te->drawing->title="OpenROAD results";
    te->drawing->setText(s);
    te->drawing->setModifySaved();
  }
  f.filename=workDir+"/placedrouted.def";
  if (f.exists()){
    layout->drawing->updateFile(workDir+"/placedrouted.def");
    string design=process::getEnv("DESIGN");
    component *comp=components::findComponent(design,"-internal-");
    if (comp==NULL){
       comp=components::newComponent(design,"-internal-");
    }
    comp->prefix="I";
    comp->label=design;
    comp->description="Generated by an automatic RTL2GDS flow with verilog file "+process::getEnv("VERILOG_FILE");
    comp->layout="[cell]\n#for parameter\tlayout\tcell\n*\t.\t"+design+"\n";
    netList *nl=layout->netlistTool->getLoadedNetList(design);
    if (nl!=NULL) {
        comp->createSymbol(nl);
        stringList pinList=nl->getExternalNodes();
        string spice="X$devicename ";
        for (int i=0;i<pinList.size();++i){
           spice+="$node("+pinList.at(i)+") ");
        }
        spice+=design+"\n";
        comp->setNetlist("spice",spice);
    }
    string post=process::getEnv("POSTPROCESSOR");
    if (post=="sky130a") {
        for (int i=0;i<setup::macroPath.size();++i){
            f.filename=setup::macroPath.at(i)+"/callback/lib/sky130a.layout";
            if (f.exists()){
                cout("proprocessing: "+f.filename+"\n");
                layout->executeMacro(f.filename);
            }
        }
    }
    layout->showStatus("RTL to GDS completed");
  } else {
    layout->showStatus("RTL to GDS finished without a result file");
  }
  return 0;
}


 
