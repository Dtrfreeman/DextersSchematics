#!/usr/bin/layout
#name=zoneplate
#help=generate a fresnel zone plate lens

int databaseunits(string s){
// return database units of the string s
int i;
double convert=0.001; //default mm if no units;
if (s.contains("mm")){
	convert=0.001;
	s.remove("mm");
	}
if (s.contains("um")){
	convert=0.000001;
	s.remove("um");
	}
if (s.contains("µm")){
	convert=0.000001;
	s.remove("µm");
	}
if (s.contains("nm")){
	convert=0.000000001;
	s.remove("nm");
	}
if (s.contains("cm")){
	convert=0.01;
	s.remove("cm");
	}
if (s.contains("dm")){
	convert=0.1;
	s.remove("dm");
	}
if (s.contains("m")){
	convert=1;
	s.remove("m");
	}
double d=s.toDouble()*convert/layout->drawing->databaseunits;
element e;
i = e.round(d);
return i;
}

int main(){
string s;
s=layout->getText("fresnel zone plate lens","Enter wavelength:","500nm");
double lamda=databaseunits(s);
s=layout->getText("fresnel zone plate lens","Enter focus:","1mm");
double focus=databaseunits(s);
s=layout->getText("fresnel zone plate lens","Enter radius:","100um");
int radius=databaseunits(s);
s=layout->getText("fresnel zone plate lens","Start with a shape at center?","yes");
bool b=false;
if (s=="Yes") b=true;
if (s=="yes") b=true;
if (s=="Y") b=true;
if (s=="y") b=true;
if (s=="Ja") b=true;
int n=0;
int r=0;
int rLast=0;
while (r<radius){
  n++;
  r=math::sqrt((lamda*focus*n)+(lamda*lamda*n*n)/(4));
  if (r>radius) r=radius;
  if (b){
    if (n==1){
	layout->drawing->point(0,0);
	layout->drawing->point(r,0);
	layout->drawing->circle();
    }
    else {
	layout->drawing->point(0,0);
	layout->drawing->point(0,rLast);
	layout->drawing->point(0,r);
	layout->drawing->polygonArc();
    }
  }
  b= (!b);
  rLast=r;
}
}


